{"ref":"6c8f4373-aa11-4ed3-9b93-56147dd3d8e6","syncData":{"version":1,"machineId":"fff39a9e-ff65-48b2-8326-8d2efc4e71b5","content":"{\"typescript.json\":\"{\\n   \\\"$or\\\": {\\n      \\\"prefix\\\": [\\\"or\\\"],\\n      \\\"body\\\": \\\"|| \\\"\\n   },\\n   \\\"$and\\\": {\\n      \\\"prefix\\\": [\\\"an\\\"],\\n      \\\"body\\\": \\\"&& \\\"\\n   },\\n   \\\"import_module\\\": {\\n      \\\"prefix\\\": [\\\"rem\\\"],\\n      \\\"body\\\": \\\"import $1 from '$1'\\\"\\n   },\\n   \\\"import_partial\\\": {\\n      \\\"prefix\\\": [\\\"rep\\\"],\\n      \\\"body\\\": \\\"import { $2 } from '$1'\\\"\\n   },\\n   \\\"function\\\": {\\n      \\\"prefix\\\": [\\\"fn\\\"],\\n      \\\"body\\\": [\\n         \\\"function $1(): $2 {\\\",\\n         \\\"\\\\t$3\\\",\\n         \\\"}\\\"\\n      ]\\n   },\\n   \\\"async_function\\\": {\\n      \\\"prefix\\\": [\\\"afn\\\"],\\n      \\\"body\\\": [\\n         \\\"async function $1(): $2 {\\\",\\n         \\\"\\\\t$3\\\",\\n         \\\"}\\\"\\n      ]\\n   },\\n   \\\"arrow_function_compact\\\": {\\n      \\\"prefix\\\": [\\\"af\\\"],\\n      \\\"body\\\": [\\n         \\\"($1): $2 => $3\\\"\\n      ]\\n   },\\n   \\\"arrow_function_full\\\": {\\n      \\\"prefix\\\": [\\\"aff\\\"],\\n      \\\"body\\\": [\\n         \\\"($1): $2 => {\\\",\\n         \\\"\\\\t$3\\\",\\n         \\\"}\\\"\\n      ]\\n   },\\n   \\\"console.log\\\": {\\n      \\\"prefix\\\": [\\\"cl\\\"],\\n      \\\"body\\\": \\\"console.log($1)\\\"\\n   },\\n   \\\"console.log_object\\\": {\\n      \\\"prefix\\\": [\\\"co\\\"],\\n      \\\"body\\\": \\\"console.log({ $1 })\\\"\\n   },\\n   \\\"JSON.stringify\\\": {\\n      \\\"prefix\\\": [\\\"js\\\"],\\n      \\\"body\\\": \\\"JSON.stringify($1)\\\"\\n   },\\n   \\\"JSON.stringify(pretty)\\\": {\\n      \\\"prefix\\\": [\\\"jsp\\\"],\\n      \\\"body\\\": \\\"JSON.stringify($1, null, 3)\\\"\\n   },\\n   \\\"JSON.parse\\\": {\\n      \\\"prefix\\\": [\\\"jp\\\"],\\n      \\\"body\\\": \\\"JSON.parse($1)\\\"\\n   },\\n   \\\"Object.keys\\\": {\\n      \\\"prefix\\\": [\\\"obk\\\"],\\n      \\\"body\\\": \\\"Object.keys($1)\\\"\\n   },\\n   \\\"Object.values\\\": {\\n      \\\"prefix\\\": [\\\"obv\\\"],\\n      \\\"body\\\": \\\"Object.values($1)\\\"\\n   },\\n   \\\"$eq\\\": {\\n      \\\"prefix\\\": [\\\"eq\\\"],\\n      \\\"body\\\": \\\"=== \\\"\\n   },\\n   \\\"$ne\\\": {\\n      \\\"prefix\\\": [\\\"ne\\\"],\\n      \\\"body\\\": \\\"!== \\\"\\n   },\\n   \\\"new_Date\\\": {\\n      \\\"prefix\\\": [\\\"nd\\\"],\\n      \\\"body\\\": \\\"new Date($1)\\\"\\n   },\\n   \\\"let\\\": {\\n      \\\"prefix\\\": [\\\"let\\\"],\\n      \\\"body\\\": \\\"let $1: $2 = $3\\\"\\n   },\\n   \\\"const\\\": {\\n      \\\"prefix\\\": [\\\"con\\\"],\\n      \\\"body\\\": \\\"const $1: $2 = $3\\\"\\n   },\\n   \\\"Date.now\\\": {\\n      \\\"prefix\\\": [\\\"dn\\\"],\\n      \\\"body\\\": \\\"Date.now()\\\"\\n   },\\n   \\\"typeStringObject\\\": {\\n      \\\"prefix\\\": [\\\"tS\\\"],\\n      \\\"body\\\": \\\"String\\\"\\n   },\\n   \\\"typeNumberObject\\\": {\\n      \\\"prefix\\\": [\\\"tN\\\"],\\n      \\\"body\\\": \\\"Number\\\"\\n   },\\n   \\\"typeBooleanObject\\\": {\\n      \\\"prefix\\\": [\\\"tB\\\"],\\n      \\\"body\\\": \\\"Boolean\\\"\\n   },\\n   \\\"typeString\\\": {\\n      \\\"prefix\\\": [\\\"ts\\\"],\\n      \\\"body\\\": \\\"string\\\"\\n   },\\n   \\\"typeNumber\\\": {\\n      \\\"prefix\\\": [\\\"tn\\\"],\\n      \\\"body\\\": \\\"number\\\"\\n   },\\n   \\\"typeBoolean\\\": {\\n      \\\"prefix\\\": [\\\"tb\\\"],\\n      \\\"body\\\": \\\"boolean\\\"\\n   },\\n   \\\"typeVoid\\\": {\\n      \\\"prefix\\\": [\\\"tv\\\"],\\n      \\\"body\\\": \\\"void\\\"\\n   },\\n   \\\"typePromise\\\": {\\n      \\\"prefix\\\": [\\\"tp\\\"],\\n      \\\"body\\\": \\\"Promise\\\"\\n   },\\n   \\\"parseInt\\\": {\\n      \\\"prefix\\\": [\\\"pi\\\"],\\n      \\\"body\\\": \\\"parseInt($1, 10)\\\"\\n   },\\n   \\\"parseFloat\\\": {\\n      \\\"prefix\\\": [\\\"pf\\\"],\\n      \\\"body\\\": \\\"parseFloat($1)\\\"\\n   },\\n   \\\"parseBoolean\\\": {\\n      \\\"prefix\\\": [\\\"pb\\\"],\\n      \\\"body\\\": \\\"Boolean($1)\\\"\\n   },\\n   \\\"parseNmber\\\": {\\n      \\\"prefix\\\": [\\\"pn\\\"],\\n      \\\"body\\\": \\\"Number($1)\\\"\\n   },\\n   \\\"parseStr\\\": {\\n      \\\"prefix\\\": [\\\"ps\\\"],\\n      \\\"body\\\": \\\"String($1)\\\"\\n   },\\n   \\\"process.env\\\": {\\n      \\\"prefix\\\": [\\\"pe\\\"],\\n      \\\"body\\\": \\\"process.env.\\\"\\n   },\\n   \\\"destructuringObj\\\": {\\n      \\\"prefix\\\": [\\\"dso\\\"],\\n      \\\"body\\\": \\\"const { $2 } = $1\\\"\\n   },\\n   \\\"destructuringArr\\\": {\\n      \\\"prefix\\\": [\\\"dsa\\\"],\\n      \\\"body\\\": \\\"const [$2] = $1\\\"\\n   },\\n   \\\"process.env.number\\\": {\\n      \\\"prefix\\\": [\\\"pen\\\"],\\n      \\\"body\\\": \\\"Number(process.env.$1 || '${2:unknown}')\\\"\\n   },\\n   \\\"process.env.array\\\": {\\n      \\\"prefix\\\": [\\\"pea\\\"],\\n      \\\"body\\\": \\\"process.env.$1 || '${2:[]}'\\\"\\n   },\\n   \\\"process.env.string\\\": {\\n      \\\"prefix\\\": [\\\"pes\\\"],\\n      \\\"body\\\": \\\"process.env.$1 || '${2:unknown}'\\\"\\n   }\\n}\\n\\n\",\"json.json\":\"{\\n\\t\\\"keybinding\\\": {\\n\\t\\t\\\"prefix\\\": \\\"key\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"{\\\",\\n\\t\\t\\t\\\"\\\\\\\"key\\\\\\\": \\\\\\\"$1\\\\\\\",\\\",\\n\\t\\t\\t\\\"\\\\\\\"command\\\\\\\": \\\\\\\"$2\\\\\\\",\\\",\\n\\t\\t\\t\\\"\\\\\\\"when\\\\\\\": \\\\\\\"$3\\\\\\\"\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\n\\t},\\n\\t\\\"run command\\\": {\\n\\t\\t\\\"prefix\\\": \\\"cmd\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"{\\\",\\n\\t\\t\\t\\\"\\\\\\\"key\\\\\\\": \\\\\\\"$1\\\\\\\",\\\",\\n\\t\\t\\t\\\"\\\\\\\"command\\\\\\\": \\\\\\\"runCommands\\\\\\\",\\\",\\n\\t\\t\\t\\\"\\\\\\\"args\\\\\\\": {\\\",\\n\\t\\t\\t\\t\\\"\\\\\\\"commands\\\\\\\": [\\\",\\n\\t\\t\\t\\t\\t\\\"\\\\\\\"$2\\\\\\\"\\\",\\n\\t\\t\\t\\t\\\"]\\\",\\n\\t\\t\\t\\\"},\\\",\\n\\t\\t\\t\\\"\\\\\\\"when\\\\\\\": \\\\\\\"$3\\\\\\\"\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t\\n\\t\\t]\\n\\t}\\n}\"}"}}