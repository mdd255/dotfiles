[
	{
		"key": "ctrl+n",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "($1)"
		},
		"when": "editorFocus && neovim.mode == insert"
	},
	{
		"key": "ctrl+e",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "[$1]"
		},
		"when": "editorFocus && neovim.mode == insert"
	},
	{
		"key": "ctrl+i",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "{$1}"
		},
		"when": "editorFocus && neovim.mode == insert"
	},
	{
		"key": "ctrl+h",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "<$1>"
		},
		"when": "editorFocus && neovim.mode == insert"
	},
	{
		"key": "ctrl+o",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "'$1'"
		},
		"when": "editorFocus && neovim.mode == insert"
	},
	{
		"key": "ctrl+a",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "\"$1\""
		},
		"when": "editorFocus && neovim.mode == insert"
	},
	{
		"key": "ctrl+r",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "`$1`"
		},
		"when": "editorFocus && neovim.mode == insert"
	},
	{
		"key": "h",
		"command": "type",
		"args": {
			"text": ""
		},
		"when": "!neovim.init && editorFocus"
	},
	{
		"key": "i",
		"command": "type",
		"args": {
			"text": ""
		},
		"when": "!neovim.init && editorFocus"
	},
	{
		"key": "n",
		"command": "type",
		"args": {
			"text": ""
		},
		"when": "!neovim.init && editorFocus"
	},
	{
		"key": "f",
		"command": "type",
		"args": {
			"text": ""
		},
		"when": "!neovim.init && editorFocus"
	},
	{
		"key": "p",
		"command": "type",
		"args": {
			"text": ""
		},
		"when": "!neovim.init && editorFocus"
	},
	{
		"key": "e",
		"command": "type",
		"args": {
			"text": ""
		},
		"when": "!neovim.init && editorFocus"
	},
	{
		"key": "alt+c",
		"command": "editor.action.clipboardCopyAction"
	},
	{
		"key": "alt+x",
		"command": "editor.action.clipboardCutAction"
	},
	{
		"key": "ctrl+enter",
		"command": "editor.action.inlineSuggest.commit",
		"when": "editorTextFocus && neovim.mode == insert"
	},
	{
		"key": "Shift+t",
		"command": "workbench.action.closeSidebar",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "d",
		"command": "deleteFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "y",
		"command": "filesExplorer.copy",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "codelens.showLensesInCurrentLine",
		"when": "editorFocus && neovim.mode == normal && editorLangId != 'sql'"
	},
	{
		"key": "l",
		"command": "-list.select",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "2",
		"command": "-gitlens.views.scm.grouped.branches",
		"when": "config.gitlens.views.scm.grouped.views.branches && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.startVoiceChat",
		"when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
	},
	{
		"key": "escape",
		"command": "-workbench.action.chat.stopListening",
		"when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.stopListeningAndSubmit",
		"when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
	},
	{
		"key": "ctrl+.",
		"command": "-workbench.action.chat.toggleAgentMode",
		"when": "chatHasToolsAgent && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.chat.insertCodeBlock",
		"when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.chat.runInTerminal",
		"when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat"
	},
	{
		"key": "ctrl+l",
		"command": "-workbench.action.chat.newChat",
		"when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
	},
	{
		"key": "ctrl+l",
		"command": "-workbench.action.chat.newEditSession",
		"when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
	},
	{
		"key": "ctrl+shift+alt+i",
		"command": "-workbench.action.chat.openEditSession",
		"when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
	},
	{
		"key": "alt+f10",
		"command": "-editor.action.nextCommentedRangeAction",
		"when": "activeEditorHasCommentingRange"
	},
	{
		"key": "shift+alt+f10",
		"command": "-editor.action.previousCommentedRangeAction",
		"when": "activeEditorHasCommentingRange"
	},
	{
		"key": "1",
		"command": "-gitlens.views.scm.grouped.commits",
		"when": "config.gitlens.views.scm.grouped.views.commits && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "7",
		"command": "-gitlens.views.scm.grouped.contributors",
		"when": "config.gitlens.views.scm.grouped.views.contributors && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.branches.copy",
		"when": "focusedView == 'gitlens.views.branches'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.commits.copy",
		"when": "focusedView == 'gitlens.views.commits'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.contributors.copy",
		"when": "focusedView == 'gitlens.views.contributors'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.drafts.copy",
		"when": "focusedView == 'gitlens.views.drafts'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.lineHistory.copy",
		"when": "focusedView == 'gitlens.views.lineHistory'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.fileHistory.copy",
		"when": "focusedView == 'gitlens.views.fileHistory'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.pullRequest.copy",
		"when": "focusedView == 'gitlens.views.pullRequest'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.remotes.copy",
		"when": "focusedView == 'gitlens.views.remotes'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.repositories.copy",
		"when": "focusedView == 'gitlens.views.repositories'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.searchAndCompare.copy",
		"when": "focusedView == 'gitlens.views.searchAndCompare'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.stashes.copy",
		"when": "focusedView == 'gitlens.views.stashes'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.tags.copy",
		"when": "focusedView == 'gitlens.views.tags'"
	},
	{
		"key": "ctrl+enter",
		"command": "-chatEditor.action.accept",
		"when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-chatEditor.action.acceptHunk",
		"when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.chat.applyInEditor",
		"when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
	},
	{
		"key": "ctrl+backspace",
		"command": "-chatEditor.action.reject",
		"when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource"
	},
	{
		"key": "ctrl+shift+backspace",
		"command": "-chatEditor.action.undoHunk",
		"when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
	},
	{
		"key": "alt+f5",
		"command": "-chatEditor.action.navigateNext",
		"when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
	},
	{
		"key": "shift+alt+f5",
		"command": "-chatEditor.action.navigatePrevious",
		"when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.workspaces.copy",
		"when": "focusedView == 'gitlens.views.workspaces'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.worktrees.copy",
		"when": "focusedView == 'gitlens.views.worktrees'"
	},
	{
		"key": "ctrl+enter",
		"command": "-issue.createIssueFromFile",
		"when": "!issues.creatingFromFile && resourceScheme == 'newIssue'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-git.revertSelectedRanges",
		"when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "-git.stageSelectedRanges",
		"when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "-git.unstageSelectedRanges",
		"when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'"
	},
	{
		"key": "ctrl+alt+.",
		"command": "-github.copilot.chat.rerunWithCopilotDebug",
		"when": "github.copilot-chat.activated && terminalFocus && terminalShellIntegrationEnabled && !terminalAltBufferActive"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "ctrl+shift+g shift+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "shift+alt+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
	},
	{
		"key": "ctrl+shift+g shift+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "shift+alt+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
	},
	{
		"key": "alt+b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'"
	},
	{
		"key": "ctrl+shift+g b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:blameable'"
	},
	{
		"key": "browserback",
		"command": "-workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "browserforward",
		"command": "-workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	{
		"key": "end",
		"command": "-editor.action.goToBottomHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "home",
		"command": "-editor.action.goToTopHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "shift+escape",
		"command": "-editor.action.inlineSuggest.hide",
		"when": "inInlineEditsPreviewEditor"
	},
	{
		"key": "ctrl+i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
	},
	{
		"key": "ctrl+i",
		"command": "-inlineChat2.start",
		"when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput && !inlineChatHasSession"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.terminal.chat.insertCommand",
		"when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "alt+enter",
		"command": "-workbench.action.terminal.chat.insertCommand",
		"when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.terminal.chat.insertFirstCommand",
		"when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "alt+enter",
		"command": "-workbench.action.terminal.chat.insertFirstCommand",
		"when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.terminal.chat.runCommand",
		"when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.terminal.chat.runFirstCommand",
		"when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "ctrl+k i",
		"command": "-inlineChat.startWithCurrentLine",
		"when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
	},
	{
		"key": "ctrl+i",
		"command": "-inlineChat.startWithCurrentLine",
		"when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
	},
	{
		"key": "ctrl+i",
		"command": "-inlineChat2.stop",
		"when": "inlineChatHasEditsAgent && inlineChatVisible && inlineChatHasSession == 'empty'"
	},
	{
		"key": "escape",
		"command": "-inlineChat2.stop",
		"when": "inlineChatHasEditsAgent && inlineChatVisible && inlineChatHasSession == 'empty'"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.terminal.chat.start",
		"when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "ctrl+i",
		"command": "-inlineChat2.reveal",
		"when": "inlineChatHasEditsAgent && inlineChatHasSession"
	},
	{
		"key": "enter",
		"command": "-editor.action.insertColorWithStandaloneColorPicker",
		"when": "standaloneColorPickerFocused"
	},
	{
		"key": "0",
		"command": "-gitlens.views.scm.grouped.launchpad",
		"when": "config.gitlens.views.scm.grouped.views.launchpad && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+shift+n",
		"command": "-workbench.action.newWindow"
	},
	{
		"key": "ctrl+d",
		"command": "-notebook.addFindMatchToSelection",
		"when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+/",
		"command": "-notebook.commentSelectedCells",
		"when": "notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "backspace",
		"command": "-noteMultiCursor.deleteLeft",
		"when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'"
	},
	{
		"key": "delete",
		"command": "-noteMultiCursor.deleteRight",
		"when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'"
	},
	{
		"key": "enter",
		"command": "-notebook.cell.edit",
		"when": "notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused"
	},
	{
		"key": "meta+enter",
		"command": "-notebook.cell.execute",
		"when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "escape",
		"command": "-noteMultiCursor.exit",
		"when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.focusInOutput",
		"when": "isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-notebook.cell.focusInOutput",
		"when": "notebookCellHasOutputs && notebookEditorFocused"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-notebook.focusNextEditor",
		"when": "accessibilityModeEnabled && notebookCellEditorFocused"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-notebook.cell.focusOutOutput",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+pageup",
		"command": "-notebook.focusPreviousEditor",
		"when": "accessibilityModeEnabled && notebookCellEditorFocused"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-notebook.selectAllFindMatches",
		"when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "shift+alt+p",
		"command": "-projectManager.listProjects"
	},
	{
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
	},
	{
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		"key": "3",
		"command": "-gitlens.views.scm.grouped.remotes",
		"when": "config.gitlens.views.scm.grouped.views.remotes && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+down",
		"command": "-repl.input.focus",
		"when": "isCompositeNotebook && notebookEditorFocused"
	},
	{
		"key": "alt+home alt+home",
		"command": "-repl.input.focus",
		"when": "mostRecentReplEditor"
	},
	{
		"key": "alt+end alt+end",
		"command": "-repl.focusLastItemExecuted",
		"when": "isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-editor.action.inPlaceReplace.down",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+,",
		"command": "-editor.action.inPlaceReplace.up",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "8",
		"command": "-gitlens.views.scm.grouped.repositories",
		"when": "config.gitlens.views.scm.grouped.views.repositories && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-mysql.runAllQuery",
		"when": "editorLangId =~ /sql|cql|postgres/ || resourceFilename =~ /.dbclient-js$/"
	},
	{
		"key": "ctrl+shift+alt+enter",
		"command": "-mysql.runAllQueryWithoutParse",
		"when": "editorLangId =~ /sql|cql|postgres/ || resourceFilename =~ /.dbclient-js$/"
	},
	{
		"key": "9",
		"command": "-gitlens.views.scm.grouped.searchAndCompare",
		"when": "config.gitlens.views.scm.grouped.views.searchAndCompare && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-rerunSearchEditorSearch",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-selectAllSearchEditorMatches",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.action.findInFiles"
	},
	{
		"key": "ctrl+a",
		"command": "-editor.action.selectAll"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.selectFromAnchorToCursor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "4",
		"command": "-gitlens.views.scm.grouped.stashes",
		"when": "config.gitlens.views.scm.grouped.views.stashes && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "5",
		"command": "-gitlens.views.scm.grouped.tags",
		"when": "config.gitlens.views.scm.grouped.views.tags && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+space",
		"command": "-workbench.action.terminal.requestCompletions",
		"when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible"
	},
	{
		"key": "ctrl+k ctrl+shift+l",
		"command": "-editor.toggleFoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+space",
		"command": "-editor.action.triggerParameterHints",
		"when": "editorHasSignatureHelpProvider && editorTextFocus"
	},
	{
		"key": "ctrl+alt+i",
		"command": "-workbench.panel.chat",
		"when": "workbench.panel.chat.view.copilot.active"
	},
	{
		"key": "ctrl+shift+alt+i",
		"command": "-workbench.panel.chatEditing",
		"when": "workbench.panel.chat.view.edits.active"
	},
	{
		"key": "6",
		"command": "-gitlens.views.scm.grouped.worktrees",
		"when": "config.gitlens.views.scm.grouped.views.worktrees && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-breadcrumbs.toggleToOn",
		"when": "!config.breadcrumbs.enabled"
	},
	{
		"key": "ctrl+up",
		"command": "-chat.action.focus",
		"when": "chatCursorAtTop && inChatInput && !quickChatHasFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-chat.action.focus",
		"when": "inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-chat.action.focus",
		"when": "inChat && inChatInput && quickChatHasFocus"
	},
	{
		"key": "ctrl+c",
		"command": "-chat.inlineResourceAnchor.copyResource",
		"when": "chatAttachmentResource"
	},
	{
		"key": "ctrl+enter",
		"command": "-chat.inlineResourceAnchor.openToSide",
		"when": "chatAttachmentResource"
	},
	{
		"key": "ctrl+enter",
		"command": "-chatEditing.acceptAllFiles",
		"when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
	},
	{
		"key": "ctrl+backspace",
		"command": "-chatEditing.discardAllFiles",
		"when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
	},
	{
		"key": "shift+alt+f7",
		"command": "-chatEditor.action.diffHunk",
		"when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
	},
	{
		"key": "shift+escape",
		"command": "-closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "escape",
		"command": "-closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "shift+escape",
		"command": "-closeQuickDiff",
		"when": "dirtyDiffVisible"
	},
	{
		"key": "ctrl+f",
		"command": "-commentsFocusFilter",
		"when": "focusedView == 'workbench.panel.comments'"
	},
	{
		"key": "ctrl+down",
		"command": "-commentsFocusViewFromFilter",
		"when": "commentsFilterFocus"
	},
	{
		"key": "ctrl+end",
		"command": "-cursorBottom",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+end",
		"command": "-cursorBottomSelect",
		"when": "textInputFocus"
	},
	{
		"key": "end",
		"command": "-cursorEnd",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+space",
		"command": "-workbench.action.terminal.suggestToggleDetailsFocus",
		"when": "!textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+l",
		"command": "-workbench.action.quickchat.toggle",
		"when": "chatIsEnabled"
	},
	{
		"key": "delete",
		"command": "-workbench.action.chat.undoEdits",
		"when": "inChat && !inChatInput && chatLocation == 'editing-session'"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeGroup",
		"when": "activeEditorGroupEmpty && multipleEditorGroups"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.hideComment",
		"when": "commentEditorFocused || commentFocused"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.holdToVoiceChatInChatView",
		"when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.chat.sendToChatEditing",
		"when": "chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && chatRequestIsPaused && !chatInputHasAgent && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInstructionsAttached && chatIsEnabled && chatRequestIsPaused && !chatInputHasAgent && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInstructionsAttached && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor'"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-workbench.action.chat.sendToNewChat",
		"when": "chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatInstructionsAttached && chatRequestIsPaused && inChatInput || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress"
	},
	{
		"key": "escape",
		"command": "-workbench.action.chat.stopReadChatItemAloud",
		"when": "scopedChatSynthesisInProgress"
	},
	{
		"key": "ctrl+/",
		"command": "-workbench.action.chat.attachContext",
		"when": "inChatInput && chatLocation == 'editing-session' || inChatInput && chatLocation == 'editor' || inChatInput && chatLocation == 'notebook' || inChatInput && chatLocation == 'panel' || inChatInput && chatLocation == 'terminal'"
	},
	{
		"key": "ctrl+alt+f",
		"command": "-repl.action.find",
		"when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
	},
	{
		"key": "pageup",
		"command": "-quickInput.pagePrevious",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+enter",
		"command": "-repl.execute",
		"when": "isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'"
	},
	{
		"key": "shift+enter",
		"command": "-repl.execute",
		"when": "config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'"
	},
	{
		"key": "enter",
		"command": "-repl.execute",
		"when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'"
	},
	{
		"key": "ctrl+alt+home",
		"command": "-quickInput.first",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+home",
		"command": "-quickInput.first",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+alt+end",
		"command": "-quickInput.last",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+end",
		"command": "-quickInput.last",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+pageup",
		"command": "-quickInput.pagePrevious",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "alt+pageup",
		"command": "-quickInput.pagePrevious",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "enter",
		"command": "-python.execInREPLEnter",
		"when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !inlineChatFocused && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'"
	},
	{
		"key": "enter",
		"command": "-python.execInInteractiveWindowEnter",
		"when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !inlineChatFocused && !notebookCellListFocused && activeEditor == 'workbench.editor.interactive'"
	},
	{
		"key": "d",
		"command": "notification.clear",
		"when": "notificationFocus"
	},
	{
		"key": "delete",
		"command": "-notification.clear",
		"when": "notificationFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.focusNextChatWidget",
		"when": "editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "ctrl+k i",
		"command": "-notebook.cell.chat.start",
		"when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+i",
		"command": "-notebook.cell.chat.start",
		"when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "/",
		"command": "-list.toggleKeyboardNavigation",
		"when": "listFocus && listSupportsKeyboardNavigation && !inputFocus"
	},
	{
		"key": "ctrl+a",
		"command": "-list.selectAll",
		"when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "ctrl+alt+f",
		"command": "-list.find.replInputFocus",
		"when": "view == 'workbench.panel.repl.view'"
	},
	{
		"key": "f3",
		"command": "-list.find.replInputFocus",
		"when": "view == 'workbench.panel.repl.view'"
	},
	{
		"key": "shift+escape",
		"command": "-leaveSnippet",
		"when": "inSnippetMode && textInputFocus"
	},
	{
		"key": "alt+k",
		"command": "-keybindings.editor.recordSearchKeys",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "ctrl+c",
		"command": "-keybindings.editor.copyKeybindingEntry",
		"when": "inKeybindings && keybindingFocus && !whenFocus"
	},
	{
		"key": "ctrl+home",
		"command": "-interactive.scrollToTop",
		"when": "activeEditor == 'workbench.editor.interactive'"
	},
	{
		"key": "escape",
		"command": "-inlineChat.close",
		"when": "inlineChatHasProvider && inlineChatVisible"
	},
	{
		"key": "escape",
		"command": "-inlineChat.discardHunkChange",
		"when": "inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits'"
	},
	{
		"key": "escape",
		"command": "-inlineChat.hideHint",
		"when": "inlineChatShowingHint"
	},
	{
		"key": "ctrl+shift+left",
		"command": "-cursorWordAccessibilityLeftSelect",
		"when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
	},
	{
		"key": "ctrl+left",
		"command": "-cursorWordAccessibilityLeft",
		"when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
	},
	{
		"key": "ctrl+home",
		"command": "-cursorTop",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+right",
		"command": "-cursorWordAccessibilityRight",
		"when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
	},
	{
		"key": "ctrl+shift+right",
		"command": "-cursorWordAccessibilityRightSelect",
		"when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
	},
	{
		"key": "shift+delete",
		"command": "-deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "delete",
		"command": "-deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus"
	},
	{
		"key": "alt+a",
		"command": "-editor.action.accessibilityHelpConfigureAssignedKeybindings",
		"when": "accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings"
	},
	{
		"key": "alt+k",
		"command": "-editor.action.accessibilityHelpConfigureKeybindings",
		"when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-editor.action.accessibleViewNextCodeBlock",
		"when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-editor.action.accessibleViewPreviousCodeBlock",
		"when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
	},
	{
		"key": "ctrl+f",
		"command": "-editor.action.extensioneditor.showfind",
		"when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-editor.action.replaceAll",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "alt+enter",
		"command": "-editor.action.selectAllMatches",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.changeDropType",
		"when": "dropWidgetVisible"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.changePasteType",
		"when": "pasteWidgetVisible"
	},
	{
		"key": "ctrl+enter",
		"command": "-explorer.openToSide",
		"when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "shift+down",
		"command": "-cursorColumnSelectDown",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+left",
		"command": "-cursorColumnSelectLeft",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+pagedown",
		"command": "-cursorColumnSelectPageDown",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+pageup",
		"command": "-cursorColumnSelectPageUp",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+right",
		"command": "-cursorColumnSelectRight",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-acceptRenameInputWithPreview",
		"when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
	},
	{
		"key": "shift+tab",
		"command": "-acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-interactive.history.focus",
		"when": "isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused"
	},
	{
		"key": "ctrl+up",
		"command": "-interactive.history.focus",
		"when": "isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
	},
	{
		"key": "ctrl+enter",
		"command": "-mysql.mock.run",
		"when": "resourceFilename =~ /mock\\.json$/"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "mysql.runSQLInNew",
		"when": "editorLangId =~ /sql|cql|postgres/ || resourceFilename =~ /.dbclient-js$/"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-mysql.runSQLInNew",
		"when": "editorLangId =~ /sql|cql|postgres/ || resourceFilename =~ /.dbclient-js$/"
	},
	{
		"key": "ctrl+c",
		"command": "-workbench.debug.viewlet.action.copyValue",
		"when": "focusedView == 'workbench.debug.variablesView' || focusedView == 'workbench.debug.watchExpressionsView'"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.terminal.chat.rerunRequest",
		"when": "terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "pageup",
		"command": "-workbench.action.interactivePlayground.pageUp",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-quickInput.acceptInBackground",
		"when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
	},
	{
		"key": "alt+right",
		"command": "-quickInput.acceptInBackground",
		"when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
	},
	{
		"key": "right",
		"command": "-quickInput.acceptInBackground",
		"when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.startVoiceChat",
		"when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
	},
	{
		"key": "escape",
		"command": "-workbench.action.chat.stopListening",
		"when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.stopListeningAndSubmit",
		"when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
	},
	{
		"key": "escape",
		"command": "-workbench.action.speech.stopReadAloud",
		"when": "scopedChatSynthesisInProgress && textToSpeechInProgress"
	},
	{
		"key": "escape",
		"command": "-editor.debug.action.closeExceptionWidget",
		"when": "exceptionWidgetVisible"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-mysql.db.active",
		"when": "editorLangId == 'sql'"
	},
	{
		"key": "ctrl+l",
		"command": "-workbench.action.chat.newChat",
		"when": "chatIsEnabled && inChat"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "ctrl+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-breadcrumbs.focusAndSelect",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "ctrl+shift+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "-git.unstageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+q",
		"command": "-workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "f7",
		"command": "-inlineChat.moveToNextHunk",
		"when": "inlineChatHasProvider && inlineChatVisible"
	},
	{
		"key": "ctrl+alt+=",
		"command": "-editor.action.inlineEdit.jumpBack",
		"when": "cursorAtInlineEdit && !editorReadonly"
	},
	{
		"key": "ctrl+alt+=",
		"command": "-editor.action.inlineEdit.jumpTo",
		"when": "inlineEditVisible && !cursorAtInlineEdit && !editorReadonly"
	},
	{
		"key": "shift+f7",
		"command": "-inlineChat.moveToPreviousHunk",
		"when": "inlineChatHasProvider && inlineChatVisible"
	},
	{
		"key": "ctrl+r",
		"command": "-python.refreshTensorBoard",
		"when": "python.hasActiveTensorBoardSession"
	},
	{
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
	},
	{
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !config.python.REPL.sendToNativeREPL && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
	},
	{
		"key": "alt+=",
		"command": "-increaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+enter",
		"command": "-search.action.openInEditor",
		"when": "hasSearchResult && searchViewletFocus"
	},
	{
		"key": "ctrl+; ctrl+shift+i",
		"command": "-testing.toggleInlineCoverage"
	},
	{
		"key": "escape",
		"command": "-inlayHints.stopReadingLineWithHint",
		"when": "isReadingLineWithInlayHints"
	},
	{
		"key": "ctrl+k ctrl+b",
		"command": "-editor.action.setSelectionAnchor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "ctrl+shift+x",
		"command": "-workbench.view.extensions",
		"when": "viewContainer.workbench.view.extensions.enabled"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+y",
		"command": "-workbench.debug.action.toggleRepl",
		"when": "workbench.panel.repl.view.active"
	},
	{
		"key": "ctrl+k ctrl+h",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "ctrl+alt+v",
		"command": "-workbench.action.editorDictation.start",
		"when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-list.showHover",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-list.toggleSelection",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "ctrl+space",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh' || config.terminal.integrated.suggest.enabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "ctrl+down",
		"command": "-quickInput.next",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-quickInput.pageNext",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+alt+down",
		"command": "-quickInput.nextSeparator",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "alt+down",
		"command": "-quickInput.nextSeparatorWithQuickAccessFallback",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-quickInput.pageNext",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "alt+pagedown",
		"command": "-quickInput.pageNext",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-quickInput.pagePrevious",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+up",
		"command": "-quickInput.previous",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+alt+up",
		"command": "-quickInput.previousSeparator",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "alt+up",
		"command": "-quickInput.previousSeparatorWithQuickAccessFallback",
		"when": "inQuickInput && quickInputType == 'quickPick'"
	},
	{
		"key": "ctrl+right",
		"command": "-quickInput.acceptInBackground",
		"when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
	},
	{
		"key": "shift+alt+f",
		"command": "-filesExplorer.findInFolder",
		"when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "shift+alt+f9",
		"command": "-editor.action.previousCommentThreadAction"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showSupertypes",
		"when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showSubtypes",
		"when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
	},
	{
		"key": "alt+k",
		"command": "-editor.action.accessibilityHelpConfigureKeybindings",
		"when": "accessibilityHelpIsShown"
	},
	{
		"key": "alt+h",
		"command": "-editor.action.accessibilityHelpOpenHelpLink",
		"when": "accessibilityHelpIsShown"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.view.search",
		"when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
	},
	{
		"key": "ctrl+i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && !editorReadonly"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+i",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.holdToVoiceChatInChatView",
		"when": "chatIsEnabled && hasSpeechProvider && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.terminal.chat.focusInput",
		"when": "terminalChatFocus && !inlineChatFocused"
	},
	{
		"key": "ctrl+k i",
		"command": "-inlineChat.start",
		"when": "editorFocus && inlineChatHasProvider && !editorReadonly"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.terminal.chat.start",
		"when": "inlineChatHasProvider && terminalFocusInAny && terminalHasBeenCreated || inlineChatHasProvider && terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "ctrl+q",
		"command": "-extension.vim_winCtrlQ",
		"when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
	},
	{
		"key": "shift+f9",
		"command": "-settings.action.showContextMenu",
		"when": "inSettingsEditor"
	},
	{
		"key": "ctrl+c",
		"command": "-editor.action.clipboardCopyAction"
	},
	{
		"key": "ctrl+x",
		"command": "-editor.action.clipboardCutAction"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.defineKeybinding",
		"when": "resource == 'vscode-userdata:/home/dh/.config/Code/User/keybindings.json'"
	},
	{
		"key": "shift+alt+d",
		"command": "-editor.detectLanguage",
		"when": "editorTextFocus && !notebookEditable"
	},
	{
		"key": "ctrl+s",
		"command": "-workbench.action.files.save"
	},
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveAs"
	},
	{
		"key": "ctrl+f3",
		"command": "-editor.action.nextSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+f3",
		"command": "-editor.action.previousSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+/",
		"command": "-editor.foldAllBlockComments",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+-",
		"command": "-editor.foldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+8",
		"command": "-editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+[",
		"command": "-editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "ctrl+shift+space",
		"command": "-issue.suggestRefresh",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "ctrl+k m",
		"command": "-pr.makeSuggestion",
		"when": "commentEditorFocused"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.pullRequest.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.pullRequest/"
	},
	{
		"key": "ctrl+alt+-",
		"command": "-workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	{
		"key": "ctrl+]",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-markdown.showPreview",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k v",
		"command": "-markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k ctrl+d",
		"command": "-editor.action.moveSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "delete",
		"command": "-notebook.cell.delete",
		"when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
	},
	{
		"key": "enter",
		"command": "-notebook.cell.edit",
		"when": "notebookCellListFocused && notebookEditable && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-notification.acceptPrimaryAction",
		"when": "notificationFocus || notificationToastsVisible"
	},
	{
		"key": "ctrl+k ctrl+shift+n",
		"command": "-notifications.showList"
	},
	{
		"key": "escape",
		"command": "-notifications.hideList",
		"when": "notificationCenterVisible"
	},
	{
		"key": "ctrl+k f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+[",
		"command": "-editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.pageDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.pageUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "alt+v",
		"command": "editor.action.clipboardPasteAction"
	},
	{
		"key": "ctrl+v",
		"command": "-editor.action.clipboardPasteAction"
	},
	{
		"key": "ctrl+k ctrl+t",
		"command": "-workbench.action.selectTheme"
	},
	{
		"key": "left",
		"command": "-settings.action.focusTOC",
		"when": "inSettingsEditor && settingRowFocus"
	},
	{
		"key": "ctrl+k ctrl+s",
		"command": "-workbench.action.openGlobalKeybindings"
	},
	{
		"key": "ctrl+alt+o",
		"command": "-workbench.action.remote.showMenu"
	},
	{
		"key": "enter",
		"command": "-repl.action.acceptInput",
		"when": "inDebugRepl && textInputFocus"
	},
	{
		"key": "ctrl+f",
		"command": "-repl.action.filter",
		"when": "inDebugRepl && textInputFocus"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-mysql.runSQLInNew",
		"when": "editorLangId == 'cql' || editorLangId == 'dbclient-js' || editorLangId == 'postgres' || editorLangId == 'sql'"
	},
	{
		"key": "alt+-",
		"command": "-decreaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+backspace",
		"command": "-search.searchEditor.action.deleteFileResults",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+l",
		"command": "-toggleSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+c",
		"command": "-toggleSearchEditorCaseSensitive",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleSearchEditorWholeWord",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+r",
		"command": "-toggleSearchEditorRegex",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "f4",
		"command": "-search.action.focusNextSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "shift+f4",
		"command": "-search.action.focusPreviousSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "ctrl+shift+h",
		"command": "-workbench.action.replaceInFiles"
	},
	{
		"key": "f1",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "shift+f10",
		"command": "-editor.action.showContextMenu",
		"when": "textInputFocus"
	},
	{
		"key": "alt+]",
		"command": "-editor.action.accessibleViewNext",
		"when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
	},
	{
		"key": "alt+]",
		"command": "-editor.action.inlineSuggest.showNext",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+f3",
		"command": "-editor.action.dirtydiff.previous",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "alt+[",
		"command": "-editor.action.accessibleViewPrevious",
		"when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
	},
	{
		"key": "alt+[",
		"command": "-editor.action.inlineSuggest.showPrevious",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "ctrl+shift+f2",
		"command": "-editor.action.linkedEditing",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+b",
		"command": "-workbench.action.tasks.build",
		"when": "taskCommandsRegistered"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.terminal.chat.close",
		"when": "terminalChatFocus && terminalChatVisible"
	},
	{
		"key": "escape",
		"command": "-workbench.action.terminal.chat.close",
		"when": "terminalChatFocus && terminalChatVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.terminal.chat.insertCommand",
		"when": "terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "alt+enter",
		"command": "-workbench.action.terminal.chat.insertCommand",
		"when": "terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.terminal.chat.insertFirstCommand",
		"when": "terminalChatAgentRegistered && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatAgentRegistered && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "alt+enter",
		"command": "-workbench.action.terminal.chat.insertFirstCommand",
		"when": "terminalChatAgentRegistered && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatAgentRegistered && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "enter",
		"command": "-workbench.action.terminal.chat.makeRequest",
		"when": "inlineChatFocused && terminalChatAgentRegistered && terminalHasBeenCreated && !inlineChatEmpty && !terminalChatActiveRequest || inlineChatFocused && terminalChatAgentRegistered && terminalProcessSupported && !inlineChatEmpty && !terminalChatActiveRequest"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.terminal.chat.runCommand",
		"when": "terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.terminal.chat.runFirstCommand",
		"when": "terminalChatAgentRegistered && terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatAgentRegistered && terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "alt+c",
		"command": "-workbench.action.terminal.toggleFindCaseSensitive",
		"when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
	},
	{
		"key": "alt+r",
		"command": "-workbench.action.terminal.toggleFindRegex",
		"when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
	},
	{
		"key": "alt+w",
		"command": "-workbench.action.terminal.toggleFindWholeWord",
		"when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
	},
	{
		"key": "ctrl+k ctrl+=",
		"command": "-editor.unfoldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+9",
		"command": "-editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+]",
		"command": "-editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "f6",
		"command": "-workbench.action.focusNextPart"
	},
	{
		"key": "shift+f6",
		"command": "-workbench.action.focusPreviousPart"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-workbench.action.joinEditorInGroup",
		"when": "sideBySideEditorActive"
	},
	{
		"key": "ctrl+k enter",
		"command": "-workbench.action.keepEditor"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "ctrl+k ctrl+pagedown",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "ctrl+k ctrl+pageup",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+shift+t",
		"command": "-workbench.action.reopenClosedEditor"
	},
	{
		"key": "ctrl+numpad0",
		"command": "-workbench.action.zoomReset"
	},
	{
		"key": "ctrl+shift+d",
		"command": "-workbench.view.debug",
		"when": "viewContainer.workbench.view.debug.enabled"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "alt+z",
		"command": "-editor.action.toggleWordWrap"
	},
	{
		"key": "ctrl+k z",
		"command": "-workbench.action.toggleZenMode",
		"when": "!isAuxiliaryWindowFocusedContext"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "ctrl+k ctrl+m",
		"command": "-workbench.action.toggleMaximizeEditorGroup",
		"when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
	},
	{
		"key": "alt+f9",
		"command": "-editor.action.nextCommentThreadAction"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-editor.action.accessibleViewNextCodeBlock",
		"when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat'"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-editor.action.accessibleViewPreviousCodeBlock",
		"when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat'"
	},
	{
		"key": "up",
		"command": "-cursorUp",
		"when": "textInputFocus"
	},
	{
		"key": "pagedown",
		"command": "-cursorPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "pageup",
		"command": "-cursorPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "f9",
		"command": "-editor.debug.action.toggleBreakpoint",
		"when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
	},
	{
		"key": "ctrl+x",
		"command": "-filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+c",
		"command": "-filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
	},
	{
		"key": "ctrl+v",
		"command": "-filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+alt+f",
		"command": "-list.find",
		"when": "listFocus && listSupportsFind"
	},
	{
		"key": "right",
		"command": "-list.expand",
		"when": "listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "left",
		"command": "-list.collapse",
		"when": "listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "alt+home",
		"command": "-list.focusAnyFirst",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "alt+end",
		"command": "-list.focusAnyLast",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "home",
		"command": "-list.focusFirst",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "end",
		"command": "-list.focusLast",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "shift+g",
		"command": "-list.focusLast",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+d",
		"command": "-list.focusPageDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-list.scrollDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'"
	},
	{
		"key": "ctrl+up",
		"command": "-list.scrollUp",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'"
	},
	{
		"key": "ctrl+k i",
		"command": "-notebook.cell.chat.start",
		"when": "config.notebook.experimental.cellChat && inlineChatHasProvider && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && inlineChatHasProvider && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+i",
		"command": "-notebook.cell.chat.start",
		"when": "config.notebook.experimental.cellChat && inlineChatHasProvider && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && inlineChatHasProvider && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "down",
		"command": "-notebook.cell.nullAction",
		"when": "notebookOutputInputFocused"
	},
	{
		"key": "up",
		"command": "-notebook.cell.nullAction",
		"when": "notebookOutputInputFocused"
	},
	{
		"key": "alt+f3",
		"command": "-notebook.diff.action.next",
		"when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
	},
	{
		"key": "shift+alt+f3",
		"command": "-notebook.diff.action.previous",
		"when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
	},
	{
		"key": "ctrl+f",
		"command": "-notebook.find",
		"when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "escape",
		"command": "-notebook.hideFind",
		"when": "notebookEditorFocused && notebookFindWidgetFocused"
	},
	{
		"key": "space",
		"command": "-notification.toggle",
		"when": "notificationFocus"
	},
	{
		"key": "home",
		"command": "-notifications.focusFirstToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "pageup",
		"command": "-notifications.focusFirstToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "end",
		"command": "-notifications.focusLastToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "pagedown",
		"command": "-notifications.focusLastToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "down",
		"command": "-notifications.focusNextToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "up",
		"command": "-notifications.focusPreviousToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "delete",
		"command": "-remote.tunnel.closeInline",
		"when": "tunnelCloseable && tunnelViewFocus"
	},
	{
		"key": "ctrl+c",
		"command": "-remote.tunnel.copyAddressInline",
		"when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "f2",
		"command": "-remote.tunnel.label",
		"when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "f2",
		"command": "-renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "pagedown",
		"command": "-selectNextPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+down",
		"command": "-selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-selectNextPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "down",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+pageup",
		"command": "-selectPrevPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "pageup",
		"command": "-selectPrevPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "alt+c",
		"command": "-toggleFindCaseSensitive",
		"when": "editorFocus"
	},
	{
		"key": "alt+l",
		"command": "-toggleFindInSelection",
		"when": "editorFocus"
	},
	{
		"key": "alt+r",
		"command": "-toggleFindRegex",
		"when": "editorFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleFindWholeWord",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k f2",
		"command": "-togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "alt+p",
		"command": "-togglePreserveCase",
		"when": "editorFocus"
	},
	{
		"key": "alt+c",
		"command": "-toggleSearchCaseSensitive",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+p",
		"command": "-toggleSearchPreserveCase",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+r",
		"command": "-toggleSearchRegex",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleSearchWholeWord",
		"when": "searchViewletFocus"
	},
	{
		"key": "ctrl+i",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+alt+space",
		"command": "-toggleSuggestionFocus",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k down",
		"command": "-views.moveViewDown",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k left",
		"command": "-views.moveViewLeft",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k right",
		"command": "-views.moveViewRight",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k up",
		"command": "-views.moveViewUp",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+shift+alt+i",
		"command": "-workbench.action.quickchat.toggle",
		"when": "chatIsEnabled"
	},
	{
		"key": "h",
		"command": "workbench.statusBar.focusFirst",
		"when": "statusBarFocused"
	},
	{
		"key": "home",
		"command": "-workbench.statusBar.focusFirst",
		"when": "statusBarFocused"
	},
	{
		"key": "i",
		"command": "workbench.statusBar.focusLast",
		"when": "statusBarFocused"
	},
	{
		"key": "end",
		"command": "-workbench.statusBar.focusLast",
		"when": "statusBarFocused"
	},
	{
		"key": "down",
		"command": "-workbench.banner.focusNextAction",
		"when": "bannerFocused"
	},
	{
		"key": "right",
		"command": "-workbench.banner.focusNextAction",
		"when": "bannerFocused"
	},
	{
		"key": "up",
		"command": "-workbench.banner.focusPreviousAction",
		"when": "bannerFocused"
	},
	{
		"key": "left",
		"command": "-workbench.banner.focusPreviousAction",
		"when": "bannerFocused"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-workbench.action.showTreeHover",
		"when": "customTreeView && listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "ctrl+shift+j",
		"command": "-workbench.action.search.toggleQueryDetails",
		"when": "inSearchEditor || searchViewletFocus"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
		"when": "inEditorsPicker && inQuickOpen"
	},
	{
		"key": "ctrl+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "ctrl+alt+-",
		"command": "-workbench.action.quickInputBack",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "pagedown",
		"command": "-workbench.action.interactivePlayground.pageDown",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "up",
		"command": "-workbench.action.interactivePlayground.arrowUp",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "down",
		"command": "-workbench.action.interactivePlayground.arrowDown",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "ctrl+k r",
		"command": "-workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openLocalFolder",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+k p",
		"command": "-workbench.action.files.copyPathOfActiveFile"
	},
	{
		"key": "escape escape",
		"command": "-workbench.action.exitZenMode",
		"when": "inZenMode"
	},
	{
		"key": "ctrl+k shift+o",
		"command": "-workbench.action.compareEditor.openSide",
		"when": "inDiffEditor"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.closeQuickOpen",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+alt+i",
		"command": "-workbench.action.chat.open"
	},
	{
		"key": "delete",
		"command": "-workbench.action.chat.remove",
		"when": "inChat && !inChatInput"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-workbench.action.chat.sendToNewChat",
		"when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress"
	},
	{
		"key": "down",
		"command": "-settings.action.focusSettingsFile",
		"when": "inSettingsSearch && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "-settings.action.focusSettingsFromSearch",
		"when": "inSettingsSearch && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "-showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "up",
		"command": "-showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-search.action.replaceAllInFolder",
		"when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-search.action.replaceAllInFile",
		"when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-search.action.replace",
		"when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-search.action.replaceAll",
		"when": "replaceActive && searchViewletVisible && !findWidgetVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-search.action.replaceAllInFile",
		"when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-search.action.replaceAllInFolder",
		"when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+up",
		"command": "-search.action.focusSearchFromResults",
		"when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
	},
	{
		"key": "alt+pagedown",
		"command": "-scrollPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-scrollLineUp",
		"when": "textInputFocus"
	},
	{
		"key": "up",
		"command": "-scm.viewPreviousCommit",
		"when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+down",
		"command": "-scrollLineDown",
		"when": "textInputFocus"
	},
	{
		"key": "down",
		"command": "-scm.viewNextCommit",
		"when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
	},
	{
		"key": "alt+pageup",
		"command": "-scrollPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "alt+up",
		"command": "-scm.forceViewPreviousCommit",
		"when": "scmRepository"
	},
	{
		"key": "alt+down",
		"command": "-scm.forceViewNextCommit",
		"when": "scmRepository"
	},
	{
		"key": "shift+escape",
		"command": "-removeSecondaryCursors",
		"when": "editorHasMultipleSelections && textInputFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-problems.action.focusProblemsFromFilter",
		"when": "problemsFilterFocus"
	},
	{
		"key": "ctrl+c",
		"command": "-problems.action.copy",
		"when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
	},
	{
		"key": "left",
		"command": "-previousCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
	},
	{
		"key": "shift+down",
		"command": "-list.expandSelectionDown",
		"when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "shift+up",
		"command": "-list.expandSelectionUp",
		"when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "left",
		"command": "-list.stickyScroll.collapse",
		"when": "treestickyScrollFocused"
	},
	{
		"key": "ctrl+left",
		"command": "-list.collapseAll",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "left",
		"command": "-notification.collapse",
		"when": "notificationFocus"
	},
	{
		"key": "right",
		"command": "-notification.expand",
		"when": "notificationFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-widgetNavigation.focusNext",
		"when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
	},
	{
		"key": "shift+tab",
		"command": "widgetNavigation.focusPrevious",
		"when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
	},
	{
		"key": "ctrl+up",
		"command": "-widgetNavigation.focusPrevious",
		"when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
	},
	{
		"key": "ctrl+i",
		"command": "workbench.action.chat.focusInput",
		"when": "inChat && !inChatInput"
	},
	{
		"key": "ctrl+down",
		"command": "-workbench.action.chat.focusInput",
		"when": "inChat && !inChatInput"
	},
	{
		"key": "ctrl+down",
		"command": "-keybindings.editor.focusKeybindings",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "ctrl+k ctrl+e",
		"command": "-keybindings.editor.defineWhenExpression",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+k ctrl+a",
		"command": "-keybindings.editor.addKeybinding",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+n",
		"command": "interactive.history.next",
		"when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
	},
	{
		"key": "down",
		"command": "-interactive.history.next",
		"when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
	},
	{
		"key": "ctrl+e",
		"command": "interactive.history.previous",
		"when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
	},
	{
		"key": "up",
		"command": "-interactive.history.previous",
		"when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
	},
	{
		"key": "ctrl+i",
		"command": "-inlineChat.holdForSpeech",
		"when": "hasSpeechProvider && inlineChatHasProvider && inlineChatVisible && textInputFocus"
	},
	{
		"key": "ctrl+z",
		"command": "-inlineChat.unstash",
		"when": "inlineChatHasStashedSession && !editorReadonly"
	},
	{
		"key": "left",
		"command": "-iconSelectBox.focusPrevious",
		"when": "iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus"
	},
	{
		"key": "up",
		"command": "-iconSelectBox.focusUp",
		"when": "iconSelectBoxFocus"
	},
	{
		"key": "down",
		"command": "-iconSelectBox.focusDown",
		"when": "iconSelectBoxFocus"
	},
	{
		"key": "right",
		"command": "-iconSelectBox.focusNext",
		"when": "iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus"
	},
	{
		"key": "down",
		"command": "-history.showNext",
		"when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
	},
	{
		"key": "up",
		"command": "-history.showPrevious",
		"when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+down",
		"command": "-inlineChat.arrowOutDown",
		"when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
	},
	{
		"key": "ctrl+up",
		"command": "-inlineChat.arrowOutUp",
		"when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
	},
	{
		"key": "up",
		"command": "-focusPreviousRenameSuggestion",
		"when": "renameInputVisible"
	},
	{
		"key": "down",
		"command": "-focusNextRenameSuggestion",
		"when": "renameInputVisible"
	},
	{
		"key": "down",
		"command": "-editor.action.selectNextStickyScrollLine",
		"when": "stickyScrollFocused"
	},
	{
		"key": "up",
		"command": "-editor.action.selectPreviousStickyScrollLine",
		"when": "stickyScrollFocused"
	},
	{
		"key": "shift+up",
		"command": "-cursorUpSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+right",
		"command": "-cursorWordEndRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+right",
		"command": "-cursorWordEndRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+left",
		"command": "-cursorWordLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+left",
		"command": "-cursorWordLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+home",
		"command": "-cursorTopSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+right",
		"command": "-cursorRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+left",
		"command": "-cursorLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+pagedown",
		"command": "-cursorPageDownSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+pageup",
		"command": "-cursorPageUpSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-chat.action.focus",
		"when": "chatCursorAtTop && inChatInput && chatLocation == 'panel'"
	},
	{
		"key": "ctrl+up",
		"command": "-chat.action.focus",
		"when": "inChatInput && isLinux && chatLocation == 'panel' || inChatInput && isWindows && chatLocation == 'panel'"
	},
	{
		"key": "ctrl+left",
		"command": "-breadcrumbs.focusPreviousWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "left",
		"command": "-breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+right",
		"command": "-breadcrumbs.focusNextWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "right",
		"command": "-breadcrumbs.focusNext",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "down",
		"command": "-editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "left",
		"command": "-editor.action.scrollLeftHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "right",
		"command": "-editor.action.scrollRightHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "up",
		"command": "-editor.action.scrollUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "ctrl+up",
		"command": "-workbench.action.terminal.chat.focusInput",
		"when": "terminalChatFocus && !inlineChatFocused"
	},
	{
		"key": "ctrl+down",
		"command": "-workbench.action.terminal.chat.focusResponse",
		"when": "terminalChatFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-inlineChat.focus",
		"when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
	},
	{
		"key": "ctrl+up",
		"command": "-inlineChat.focus",
		"when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'"
	},
	{
		"key": "ctrl+k ctrl+alt+c",
		"command": "-copyFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+alt+c",
		"command": "-copyRelativeFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+alt+c",
		"command": "-copyRelativeFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k c",
		"command": "-workbench.files.action.compareWithClipboard"
	},
	{
		"key": "ctrl+k d",
		"command": "-workbench.files.action.compareWithSaved"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-copyFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-workbench.action.toggleDevTools",
		"when": "isDevelopment"
	},
	{
		"key": "ctrl+right",
		"command": "-editor.action.inlineSuggest.acceptNextWord",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-workbench.action.chat.nextCodeBlock",
		"when": "chatIsEnabled && inChat"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-workbench.action.chat.previousCodeBlock",
		"when": "chatIsEnabled && inChat"
	},
	{
		"key": "ctrl+shift+f9",
		"command": "-workbench.action.chat.previousFileTree",
		"when": "chatIsEnabled && inChat"
	},
	{
		"key": "ctrl+f9",
		"command": "-workbench.action.chat.nextFileTree",
		"when": "chatIsEnabled && inChat"
	},
	{
		"key": "ctrl+k ctrl+,",
		"command": "-editor.createFoldingRangeFromSelection",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+enter",
		"command": "-github.copilot.generate",
		"when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
	},
	{
		"key": "ctrl+/",
		"command": "-github.copilot.acceptCursorPanelSolution",
		"when": "github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
	},
	{
		"key": "alt+]",
		"command": "-github.copilot.nextPanelSolution",
		"when": "github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
	},
	{
		"key": "alt+[",
		"command": "-github.copilot.previousPanelSolution",
		"when": "github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
	},
	{
		"key": "ctrl+k up",
		"command": "-workbench.action.moveActiveEditorGroupUp"
	},
	{
		"key": "shift+alt+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+o",
		"command": "-editor.action.organizeImports",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "shift+alt+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "-workbench.action.showAllEditors"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFile",
		"when": "true"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFileFolder",
		"when": "isMacNative && openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.openRecent"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openFolder",
		"when": "openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+alt+r",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+k e",
		"command": "-workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "down",
		"command": "-selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "f4",
		"command": "-references-view.next",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "f7",
		"command": "-editor.action.wordHighlight.next",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "f12",
		"command": "-goToNextReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f4",
		"command": "-goToNextReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f7",
		"command": "-editor.action.accessibleDiffViewer.next",
		"when": "isInDiffEditor"
	},
	{
		"key": "f12",
		"command": "-editor.gotoNextSymbolFromResult",
		"when": "hasSymbols"
	},
	{
		"key": "alt+f8",
		"command": "-testing.goToNextMessage",
		"when": "editorFocus && testing.isPeekVisible"
	},
	{
		"key": "ctrl+k ctrl+alt+down",
		"command": "-editor.action.nextCommentingRange",
		"when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
	},
	{
		"key": "down",
		"command": "-list.focusDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "alt+down",
		"command": "-list.focusAnyDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "pagedown",
		"command": "-list.focusPageDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "alt+up",
		"command": "-list.focusAnyUp",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "pageup",
		"command": "-list.focusPageUp",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "ctrl+u",
		"command": "-list.focusPageUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "up",
		"command": "-list.focusUp",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		"key": "up",
		"command": "-selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+up",
		"command": "-selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "shift+f7",
		"command": "-editor.action.accessibleDiffViewer.prev",
		"when": "isInDiffEditor"
	},
	{
		"key": "shift+alt+.",
		"command": "-editor.action.autoFix",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
	},
	{
		"key": "shift+alt+h",
		"command": "-references-view.showCallHierarchy",
		"when": "editorHasCallHierarchyProvider"
	},
	{
		"key": "ctrl+f2",
		"command": "-editor.action.changeAll",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k m",
		"command": "-workbench.action.editor.changeLanguageMode",
		"when": "!notebookEditorFocused"
	},
	{
		"key": "ctrl+l",
		"command": "-workbench.action.chat.newChat",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-workbench.action.chat.nextCodeBlock",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "ctrl+f9",
		"command": "-workbench.action.chat.nextFileTree",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-workbench.action.chat.previousCodeBlock",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.chat.runInTerminal",
		"when": "accessibleViewInCodeBlock && hasChatProvider || hasChatProvider && inChat"
	},
	{
		"key": "escape",
		"command": "-workbench.action.chat.stopListening",
		"when": "hasChatProvider && hasSpeechProvider && voiceChatInProgress"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.startVoiceChat",
		"when": "hasChatProvider && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !inlineChatHasActiveRequest && !inlineVoiceChatInProgress && !notebookEditorFocused && !quickVoiceChatInProgress && !terminalChatActiveRequest && !terminalVoiceChatInProgress && !voiceChatGettingReady && !voiceChatInEditorInProgress && !voiceChatInViewInProgress || hasChatProvider && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !inlineChatHasActiveRequest && !inlineVoiceChatInProgress && !notebookEditorFocused && !quickVoiceChatInProgress && !terminalChatActiveRequest && !terminalVoiceChatInProgress && !voiceChatGettingReady && !voiceChatInEditorInProgress && !voiceChatInViewInProgress"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.chat.insertCodeBlock",
		"when": "accessibleViewInCodeBlock && hasChatProvider || hasChatProvider && inChat && !inChatInput"
	},
	{
		"key": "ctrl+shift+f9",
		"command": "-workbench.action.chat.previousFileTree",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.stopListeningAndSubmit",
		"when": "hasChatProvider && hasSpeechProvider && inChatInput && voiceChatInProgress || hasChatProvider && hasSpeechProvider && inlineChatFocused && voiceChatInProgress"
	},
	{
		"key": "ctrl+k ctrl+alt+c",
		"command": "-workbench.action.addComment"
	},
	{
		"key": "ctrl+k ctrl+alt+up",
		"command": "-editor.action.previousCommentingRange",
		"when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
	},
	{
		"key": "ctrl+s",
		"command": "-issue.createIssueFromFile",
		"when": "!issues.creatingFromFile && resourceScheme == 'newIssue' && config.files.autoSave != 'off'"
	},
	{
		"key": "ctrl+alt+meta+n",
		"command": "-welcome.showNewFileEntries"
	},
	{
		"key": "alt+f6",
		"command": "-editor.action.accessibleViewDisableHint",
		"when": "accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-git.revertSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "-git.stageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "alt+h",
		"command": "-gitlens.showQuickFileHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g h",
		"command": "-gitlens.showQuickFileHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+s",
		"command": "-gitlens.showQuickRepoStatus",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g s",
		"command": "-gitlens.showQuickRepoStatus",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "ctrl+shift+g b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "shift+alt+b",
		"command": "-gitlens.toggleCodeLens",
		"when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g shift+b",
		"command": "-gitlens.toggleCodeLens",
		"when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.branches.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.branches/"
	},
	{
		"key": "alt+/",
		"command": "-gitlens.gitCommands",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g /",
		"command": "-gitlens.gitCommands",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "shift+alt+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g shift+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "shift+alt+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g shift+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+c",
		"command": "-gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g c",
		"command": "-gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "shift+alt+h",
		"command": "-gitlens.showQuickRepoHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g shift+h",
		"command": "-gitlens.showQuickRepoHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.gotoLine"
	},
	{
		"key": "shift+f4",
		"command": "-references-view.prev",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "shift+f7",
		"command": "-editor.action.wordHighlight.prev",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "shift+f12",
		"command": "-editor.action.goToReferences",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-editor.action.accessibleViewGoToSymbol",
		"when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-editor.action.accessibleViewGoToSymbol",
		"when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.gotoSymbol",
		"when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
	},
	{
		"key": "ctrl+t",
		"command": "-workbench.action.showAllSymbols"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+.",
		"command": "-editor.removeManualFoldingRanges",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-editor.action.refactor",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+f12",
		"command": "-references-view.findReferences",
		"when": "editorHasReferenceProvider"
	},
	{
		"key": "ctrl+; ctrl+a",
		"command": "-testing.debugAll"
	},
	{
		"key": "ctrl+; ctrl+e",
		"command": "-testing.debugFailTests"
	},
	{
		"key": "ctrl+; ctrl+l",
		"command": "-testing.debugLastRun"
	},
	{
		"key": "ctrl+; ctrl+c",
		"command": "-testing.debugAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; ctrl+f",
		"command": "-testing.debugCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+f8",
		"command": "-testing.goToPreviousMessage",
		"when": "editorFocus && testing.isPeekVisible"
	},
	{
		"key": "ctrl+; ctrl+m",
		"command": "-testing.openOutputPeek"
	},
	{
		"key": "ctrl+; ctrl+r",
		"command": "-testing.refreshTests",
		"when": "testing.canRefresh"
	},
	{
		"key": "ctrl+; e",
		"command": "-testing.reRunFailTests"
	},
	{
		"key": "ctrl+; l",
		"command": "-testing.reRunLastRun"
	},
	{
		"key": "ctrl+; ctrl+shift+l",
		"command": "-testing.coverageLastRun"
	},
	{
		"key": "ctrl+; a",
		"command": "-testing.runAll"
	},
	{
		"key": "ctrl+; ctrl+shift+a",
		"command": "-testing.coverageAll"
	},
	{
		"key": "ctrl+; c",
		"command": "-testing.runAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; ctrl+shift+c",
		"command": "-testing.coverageAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; f",
		"command": "-testing.runCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; ctrl+shift+f",
		"command": "-testing.coverageCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; ctrl+o",
		"command": "-testing.showMostRecentOutput",
		"when": "testing.hasAnyResults"
	},
	{
		"key": "ctrl+; ctrl+i",
		"command": "-testing.toggleInlineTestOutput"
	},
	{
		"key": "alt+h",
		"command": "-testing.toggleTestingPeekHistory",
		"when": "testing.isPeekVisible"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "-editor.toggleFold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+/",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+e",
		"command": "-editor.action.toggleScreenReaderAccessibilityMode",
		"when": "accessibilityHelpIsShown"
	},
	{
		"key": "shift+alt+f4",
		"command": "-editor.action.toggleScreenReaderAccessibilityMode"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	{
		"key": "shift+alt+0",
		"command": "-workbench.action.toggleEditorGroupLayout"
	},
	{
		"key": "ctrl+alt+=",
		"command": "-editor.action.inlineEdit.trigger",
		"when": "!editorReadonly && !inlineEditVisible"
	},
	{
		"key": "ctrl+k ctrl+x",
		"command": "-editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+0",
		"command": "-workbench.action.focusSideBar"
	},
	{
		"key": "ctrl+alt+v",
		"command": "-workbench.action.editorDictation.start",
		"when": "hasSpeechProvider && !editorDictation.inProgress && !editorReadonly"
	},
	{
		"key": "escape",
		"command": "-workbench.action.editorDictation.stop",
		"when": "editorDictation.inProgress"
	},
	{
		"key": "ctrl+k f",
		"command": "-workbench.action.closeFolder",
		"when": "emptyWorkspaceSupport && workbenchState != 'empty'"
	},
	{
		"key": "ctrl+.",
		"command": "-acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+right",
		"command": "-breadcrumbs.focusNext",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+left",
		"command": "-breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "down",
		"command": "-breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "shift+escape",
		"command": "-cancelRenameInput",
		"when": "editorFocus && renameInputVisible"
	},
	{
		"key": "shift+escape",
		"command": "-cancelLinkedEditingInput",
		"when": "LinkedEditingInputVisible && editorTextFocus"
	},
	{
		"key": "shift+escape",
		"command": "-cancelSelection",
		"when": "editorHasSelection && textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-chat.action.focus",
		"when": "chatCursorAtTop && inChatInput"
	},
	{
		"key": "ctrl+up",
		"command": "-chat.action.focus",
		"when": "inChatInput && isLinux || inChatInput && isWindows"
	},
	{
		"key": "shift+escape",
		"command": "-closeMarkersNavigation",
		"when": "editorFocus && markersNavigationVisible"
	},
	{
		"key": "alt+enter",
		"command": "-debug.openBreakpointToSide",
		"when": "breakpointsFocused"
	},
	{
		"key": "ctrl+enter",
		"command": "-debug.openBreakpointToSide",
		"when": "breakpointsFocused"
	},
	{
		"key": "ctrl+f5",
		"command": "-debug.openView",
		"when": "!debuggersAvailable"
	},
	{
		"key": "f5",
		"command": "-debug.openView",
		"when": "!debuggersAvailable"
	},
	{
		"key": "delete",
		"command": "-debug.removeBreakpoint",
		"when": "breakpointsFocused && !breakpointInputFocused"
	},
	{
		"key": "delete",
		"command": "-debug.removeWatchExpression",
		"when": "watchExpressionsFocused && !expressionSelected"
	},
	{
		"key": "f2",
		"command": "-debug.renameWatchExpression",
		"when": "watchExpressionsFocused"
	},
	{
		"key": "f2",
		"command": "-debug.setVariable",
		"when": "variablesFocused"
	},
	{
		"key": "space",
		"command": "-debug.toggleBreakpoint",
		"when": "breakpointsFocused && !inputFocus"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.key.alt+,",
		"when": "gitlens:key:,"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.key.alt+.",
		"when": "gitlens:key:."
	},
	{
		"key": "alt+enter",
		"command": "-gitlens.key.alt+enter",
		"when": "gitlens:key:alt+enter"
	},
	{
		"key": "alt+left",
		"command": "-gitlens.key.alt+left",
		"when": "gitlens:key:alt+left"
	},
	{
		"key": "alt+right",
		"command": "-gitlens.key.alt+right",
		"when": "gitlens:key:alt+right"
	},
	{
		"key": "ctrl+enter",
		"command": "-gitlens.key.ctrl+enter",
		"when": "gitlens:key:ctrl+enter"
	},
	{
		"key": "ctrl+left",
		"command": "-gitlens.key.ctrl+left",
		"when": "gitlens:key:ctrl+left"
	},
	{
		"key": "ctrl+right",
		"command": "-gitlens.key.ctrl+right",
		"when": "gitlens:key:ctrl+right"
	},
	{
		"key": "escape",
		"command": "-gitlens.key.escape",
		"when": "editorTextFocus && gitlens:key:escape && !codeActionMenuVisible && !findWidgetVisible && !isInEmbeddedEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible"
	},
	{
		"key": "left",
		"command": "-gitlens.key.left",
		"when": "gitlens:key:left"
	},
	{
		"key": "right",
		"command": "-gitlens.key.right",
		"when": "gitlens:key:right"
	},
	{
		"key": "alt+down",
		"command": "-history.showNext",
		"when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
	},
	{
		"key": "alt+up",
		"command": "-history.showPrevious",
		"when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
	},
	{
		"key": "shift+escape",
		"command": "-hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+escape",
		"command": "-hideCodeActionWidget",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "shift+f12",
		"command": "-goToPreviousReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "shift+f4",
		"command": "-goToPreviousReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "shift+tab",
		"command": "-insertPrevSuggestion",
		"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "f3",
		"command": "-list.find",
		"when": "listFocus && listSupportsFind"
	},
	{
		"key": "ctrl+f",
		"command": "-list.find",
		"when": "listFocus && listSupportsFind"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showIncomingCalls",
		"when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showOutgoingCalls",
		"when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
	},
	{
		"key": "shift+enter",
		"command": "-editor.refocusCallHierarchy",
		"when": "callHierarchyVisible"
	},
	{
		"key": "shift+enter",
		"command": "-editor.refocusTypeHierarchy",
		"when": "typeHierarchyVisible"
	},
	{
		"key": "ctrl+down",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "alt+down",
		"command": "-showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "alt+up",
		"command": "-showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+; ctrl+x",
		"command": "-testing.cancelRun"
	},
	{
		"key": "alt+enter",
		"command": "-testing.editFocusedTest",
		"when": "focusedView == 'workbench.view.testing'"
	},
	{
		"key": "ctrl+; ctrl+shift+i",
		"command": "-testing.toggleInlineCoverage",
		"when": "testing.isTestCoverageOpen"
	},
	{
		"key": "ctrl+8",
		"command": "-workbench.action.focusEighthEditorGroup"
	},
	{
		"key": "ctrl+5",
		"command": "-workbench.action.focusFifthEditorGroup"
	},
	{
		"key": "ctrl+4",
		"command": "-workbench.action.focusFourthEditorGroup"
	},
	{
		"key": "ctrl+2",
		"command": "-workbench.action.focusSecondEditorGroup"
	},
	{
		"key": "ctrl+7",
		"command": "-workbench.action.focusSeventhEditorGroup"
	},
	{
		"key": "ctrl+6",
		"command": "-workbench.action.focusSixthEditorGroup"
	},
	{
		"key": "ctrl+3",
		"command": "-workbench.action.focusThirdEditorGroup"
	},
	{
		"key": "tab",
		"command": "-workbench.action.terminal.acceptSelectedSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "enter",
		"command": "-workbench.action.terminal.acceptSelectedSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "ctrl+up",
		"command": "-workbench.action.terminal.focusAccessibleBuffer",
		"when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+alt+f2",
		"command": "-workbench.action.terminal.focusAccessibleBuffer",
		"when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "escape",
		"command": "-workbench.action.terminal.hideSuggestWidget",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "delete",
		"command": "-workbench.action.terminal.killActiveTab",
		"when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "f2",
		"command": "-workbench.action.terminal.renameActiveTab",
		"when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
	},
	{
		"key": "pagedown",
		"command": "-workbench.action.terminal.selectNextPageSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "-workbench.action.terminal.selectNextSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "pageup",
		"command": "-workbench.action.terminal.selectPrevPageSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "up",
		"command": "-workbench.action.terminal.selectPrevSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "alt+space",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "shift+enter",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "ctrl+alt+r",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "accessibilityModeEnabled && terminalFocus"
	},
	{
		"key": "ctrl+shift+5",
		"command": "-workbench.action.terminal.splitActiveTab",
		"when": "terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+alt+b",
		"command": "-workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "ctrl+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "f5",
		"command": "-workbench.action.debug.continue",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "shift+f5",
		"command": "-workbench.action.debug.disconnect",
		"when": "focusedSessionIsAttach && inDebugMode"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.debug.nextConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.debug.prevConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "shift+f9",
		"command": "-editor.debug.action.toggleInlineBreakpoint",
		"when": "editorTextFocus"
	},
	{
		"key": "f6",
		"command": "-workbench.action.debug.pause",
		"when": "debugState == 'running'"
	},
	{
		"key": "ctrl+shift+f5",
		"command": "-workbench.action.debug.restart",
		"when": "inDebugMode"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "f5",
		"command": "-workbench.action.debug.start",
		"when": "debuggersAvailable && debugState == 'inactive'"
	},
	{
		"key": "f10",
		"command": "-extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "f11",
		"command": "-extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "ctrl+f5",
		"command": "-workbench.action.debug.run",
		"when": "debuggersAvailable && debugState != 'initializing'"
	},
	{
		"key": "f11",
		"command": "-workbench.action.debug.stepInto",
		"when": "debugState != 'inactive'"
	},
	{
		"key": "ctrl+f11",
		"command": "-workbench.action.debug.stepIntoTarget",
		"when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
	},
	{
		"key": "shift+f11",
		"command": "-workbench.action.debug.stepOut",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f10",
		"command": "-workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "shift+f5",
		"command": "-workbench.action.debug.stop",
		"when": "inDebugMode && !focusedSessionIsAttach"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.defineKeybinding",
		"when": "resource == 'vscode-userdata:/home/dh/.config/Code%20-%20OSS/User/keybindings.json'"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k s",
		"command": "-workbench.action.files.saveWithoutFormatting"
	},
	{
		"key": "ctrl+f",
		"command": "-actions.find",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "f3",
		"command": "-editor.action.nextMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "shift+f3",
		"command": "-editor.action.previousMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+1",
		"command": "-editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+2",
		"command": "-editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+3",
		"command": "-editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+4",
		"command": "-editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+5",
		"command": "-editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+6",
		"command": "-editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+7",
		"command": "-editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-notebook.formatCell",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "alt+f8",
		"command": "-editor.action.marker.next",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+f8",
		"command": "-editor.action.marker.prev",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showCallHierarchy",
		"when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
	},
	{
		"key": "ctrl+shift+f10",
		"command": "-editor.action.peekDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+shift+f12",
		"command": "-editor.action.peekImplementation",
		"when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "-editor.action.removeBrackets",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+k",
		"command": "-rest-client.cancel-request",
		"when": "editorTextFocus && editorLangId == 'http'"
	},
	{
		"key": "ctrl+alt+k",
		"command": "-rest-client.cancel-request",
		"when": "editorTextFocus && editorLangId == 'plaintext'"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-rest-client.generate-codesnippet",
		"when": "editorTextFocus && editorLangId == 'http'"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-rest-client.generate-codesnippet",
		"when": "editorTextFocus && editorLangId == 'plaintext'"
	},
	{
		"key": "ctrl+alt+l",
		"command": "-rest-client.rerun-last-request",
		"when": "editorTextFocus && editorLangId == 'http'"
	},
	{
		"key": "ctrl+alt+l",
		"command": "-rest-client.rerun-last-request",
		"when": "editorTextFocus && editorLangId == 'plaintext'"
	},
	{
		"key": "ctrl+alt+l",
		"command": "-rest-client.rerun-last-request",
		"when": "httpResponsePreviewFocus"
	},
	{
		"key": "ctrl+alt+r",
		"command": "-rest-client.request",
		"when": "editorTextFocus && editorLangId == 'http'"
	},
	{
		"key": "ctrl+alt+r",
		"command": "-rest-client.request",
		"when": "editorTextFocus && editorLangId == 'plaintext'"
	},
	{
		"key": "ctrl+alt+e",
		"command": "-rest-client.switch-environment"
	},
	{
		"key": "ctrl+alt+h",
		"command": "-rest-client.history"
	},
	{
		"key": "alt+down",
		"command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
		"when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "alt+up",
		"command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
		"when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "escape",
		"command": "-workbench.action.terminal.clearSelection",
		"when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.terminal.chat.close",
		"when": "config.terminal.integrated.experimentalInlineChat && terminalChatFocus && terminalChatVisible"
	},
	{
		"key": "escape",
		"command": "-workbench.action.terminal.chat.close",
		"when": "config.terminal.integrated.experimentalInlineChat && terminalChatFocus && terminalChatVisible"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.copySelection",
		"when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	{
		"key": "f3",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "shift+enter",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "shift+f3",
		"command": "-workbench.action.terminal.findPrevious",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "enter",
		"command": "-workbench.action.terminal.findPrevious",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "ctrl+f",
		"command": "-workbench.action.terminal.focusFind",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-workbench.action.terminal.focusHover",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "alt+down",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "alt+up",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+down",
		"command": "-workbench.action.terminal.focus",
		"when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "-workbench.action.terminal.focusTabs",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.terminal.goToRecentDirectory",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.terminal.hideFind",
		"when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "escape",
		"command": "-workbench.action.terminal.hideFind",
		"when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "alt+enter",
		"command": "-workbench.action.terminal.chat.insertCommand",
		"when": "config.terminal.integrated.experimentalInlineChat && terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest || config.terminal.integrated.experimentalInlineChat && terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.terminal.killEditor",
		"when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "enter",
		"command": "-workbench.action.terminal.chat.makeRequest",
		"when": "config.terminal.integrated.experimentalInlineChat && inlineChatFocused && terminalChatAgentRegistered && terminalHasBeenCreated && !inlineChatEmpty && !terminalChatActiveRequest || config.terminal.integrated.experimentalInlineChat && inlineChatFocused && terminalChatAgentRegistered && terminalProcessSupported && !inlineChatEmpty && !terminalChatActiveRequest"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.terminal.openDetectedLink",
		"when": "terminalFocus && terminalHasBeenCreated"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.action.terminal.openDetectedLink",
		"when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+insert",
		"command": "-workbench.action.terminal.pasteSelection",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+left",
		"command": "-workbench.action.terminal.resizePaneLeft",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+right",
		"command": "-workbench.action.terminal.resizePaneRight",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+enter",
		"command": "-workbench.action.terminal.chat.runCommand",
		"when": "config.terminal.integrated.experimentalInlineChat && terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest || config.terminal.integrated.experimentalInlineChat && terminalChatAgentRegistered && terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.terminal.runRecentCommand",
		"when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "ctrl+alt+r",
		"command": "-workbench.action.terminal.runRecentCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-workbench.action.terminal.scrollDown",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+pagedown",
		"command": "-workbench.action.terminal.scrollDownPage",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+end",
		"command": "-workbench.action.terminal.scrollToBottomAccessibleView",
		"when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "shift+home",
		"command": "-workbench.action.terminal.scrollToTopAccessibleView",
		"when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
	},
	{
		"key": "shift+end",
		"command": "-workbench.action.terminal.scrollToBottom",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+down",
		"command": "-workbench.action.terminal.scrollToNextCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+up",
		"command": "-workbench.action.terminal.scrollToPreviousCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "shift+home",
		"command": "-workbench.action.terminal.scrollToTop",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-workbench.action.terminal.scrollUp",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+pageup",
		"command": "-workbench.action.terminal.scrollUpPage",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.action.terminal.searchWorkspace",
		"when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-workbench.action.terminal.selectToNextCommand",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-workbench.action.terminal.selectToPreviousCommand",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+.",
		"command": "-workbench.action.terminal.showQuickFixes",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+shift+5",
		"command": "-workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	{
		"key": "alt+c",
		"command": "-workbench.action.terminal.toggleFindCaseSensitive",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "alt+r",
		"command": "-workbench.action.terminal.toggleFindRegex",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "alt+w",
		"command": "-workbench.action.terminal.toggleFindWholeWord",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "alt+z",
		"command": "-workbench.action.terminal.sizeToContentWidth",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
	},
	{
		"key": "alt+f1",
		"command": "-editor.action.accessibilityHelp",
		"when": "!accessibilityHelpIsShown"
	},
	{
		"key": "shift+alt+f1",
		"command": "-editor.action.accessibilityHelp",
		"when": "!accessibilityHelpIsShown"
	},
	{
		"key": "alt+f2",
		"command": "-editor.action.accessibleView"
	},
	{
		"key": "ctrl+up",
		"command": "-search.focus.previousInputBox",
		"when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-search.focus.nextInputBox",
		"when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "alt+f3",
		"command": "-editor.action.dirtydiff.next",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "alt+f5",
		"command": "-workbench.action.editor.nextChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+alt+f5",
		"command": "-workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "shift+alt+f5",
		"command": "-workbench.action.editor.previousChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+i",
		"command": "-editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-editor.action.addCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+w",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "alt+f4",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+up",
		"command": "-editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.commits.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.commits/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.contributors.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.contributors/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.drafts.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.drafts/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.fileHistory.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.lineHistory.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.remotes.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.remotes/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.repositories.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.searchAndCompare.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.searchAndCompare\\b/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.stashes.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.stashes/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.tags.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.tags/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.workspaces.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.workspaces/"
	},
	{
		"key": "ctrl+c",
		"command": "-gitlens.views.worktrees.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.worktrees/"
	},
	{
		"key": "ctrl+f12",
		"command": "-editor.action.goToImplementation",
		"when": "editorHasImplementationProvider && editorTextFocus"
	},
	{
		"key": "ctrl+f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
	},
	{
		"key": "f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "-editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+f5",
		"command": "-workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+insert",
		"command": "-editor.action.clipboardPasteAction"
	},
	{
		"key": "ctrl+shift+z",
		"command": "-redo"
	},
	{
		"key": "ctrl+y",
		"command": "-redo"
	},
	{
		"key": "ctrl+z",
		"command": "-undo"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+numpad_add",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+numpad_subtract",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "escape",
		"command": "-welcome.goBack",
		"when": "inWelcome && activeEditor == 'gettingStartedPage'"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.hideComment",
		"when": "commentEditorFocused"
	},
	{
		"key": "alt+1",
		"command": "-workbench.action.openEditorAtIndex1"
	},
	{
		"key": "alt+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "alt+3",
		"command": "-workbench.action.openEditorAtIndex3"
	},
	{
		"key": "alt+4",
		"command": "-workbench.action.openEditorAtIndex4"
	},
	{
		"key": "alt+5",
		"command": "-workbench.action.openEditorAtIndex5"
	},
	{
		"key": "alt+6",
		"command": "-workbench.action.openEditorAtIndex6"
	},
	{
		"key": "alt+7",
		"command": "-workbench.action.openEditorAtIndex7"
	},
	{
		"key": "alt+8",
		"command": "-workbench.action.openEditorAtIndex8"
	},
	{
		"key": "alt+9",
		"command": "-workbench.action.openEditorAtIndex9"
	},
	{
		"key": "e",
		"command": "workbench.statusBar.focusNext",
		"when": "statusBarFocused"
	},
	{
		"key": "down",
		"command": "-workbench.statusBar.focusNext",
		"when": "statusBarFocused"
	},
	{
		"key": "right",
		"command": "-workbench.statusBar.focusNext",
		"when": "statusBarFocused"
	},
	{
		"key": "up",
		"command": "-workbench.statusBar.focusPrevious",
		"when": "statusBarFocused"
	},
	{
		"key": "n",
		"command": "workbench.statusBar.focusPrevious",
		"when": "statusBarFocused"
	},
	{
		"key": "left",
		"command": "-workbench.statusBar.focusPrevious",
		"when": "statusBarFocused"
	},
	{
		"key": "ctrl+alt+g",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+backspace",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+delete",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+shift+2",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+shift+6",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+/",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "j",
		"command": "-list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "k",
		"command": "-list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "shift+delete",
		"command": "-deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "shift+backspace",
		"command": "-deleteLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+backspace",
		"command": "-deleteWordLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+delete",
		"command": "-deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+escape",
		"command": "-closeReferenceSearch",
		"when": "inReferenceSearchEditor && !config.editor.stablePeek"
	},
	{
		"key": "shift+escape",
		"command": "-closeReferenceSearch",
		"when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
	},
	{
		"key": "shift+escape",
		"command": "-closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !isComposing"
	},
	{
		"key": "shift+escape",
		"command": "-closeDirtyDiff",
		"when": "dirtyDiffVisible"
	},
	{
		"key": "shift+escape",
		"command": "-closeBreakpointWidget",
		"when": "breakpointWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "f11",
		"command": "-workbench.action.toggleFullScreen",
		"when": "!isIOS"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorUp"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorRight"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorOrthogonal"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorLeft"
	},
	{
		"key": "ctrl+\\",
		"command": "-workbench.action.splitEditor"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorDown"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-workbench.action.splitEditorInGroup",
		"when": "activeEditorCanSplitInGroup"
	},
	{
		"key": "ctrl+9",
		"command": "-workbench.action.lastEditorInGroup"
	},
	{
		"key": "alt+0",
		"command": "-workbench.action.lastEditorInGroup"
	},
	{
		"key": "shift+alt+1",
		"command": "-workbench.action.moveEditorToFirstGroup"
	},
	{
		"key": "shift+alt+9",
		"command": "-workbench.action.moveEditorToLastGroup"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "ctrl+alt+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+shift+pageup",
		"command": "-workbench.action.moveEditorLeftInGroup"
	},
	{
		"key": "ctrl+shift+pagedown",
		"command": "-workbench.action.moveEditorRightInGroup"
	},
	{
		"key": "ctrl+k left",
		"command": "-workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "ctrl+k down",
		"command": "-workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "ctrl+k right",
		"command": "-workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+k ctrl+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "ctrl+k ctrl+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "ctrl+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "ctrl+k ctrl+up",
		"command": "-workbench.action.focusAboveGroup"
	},
	{
		"key": "ctrl+k ctrl+down",
		"command": "-workbench.action.focusBelowGroup"
	},
	{
		"key": "ctrl+k o",
		"command": "-workbench.action.copyEditorToNewWindow",
		"when": "activeEditor"
	},
	{
		"key": "ctrl+k u",
		"command": "-workbench.action.closeUnmodifiedEditors"
	},
	{
		"key": "ctrl+k ctrl+w",
		"command": "-workbench.action.closeAllEditors"
	},
	{
		"key": "ctrl+k w",
		"command": "-workbench.action.closeEditorsInGroup"
	},
	{
		"key": "ctrl+k ctrl+shift+w",
		"command": "-workbench.action.closeAllGroups"
	},
	{
		"key": "pagedown",
		"command": "-editor.action.pageDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "pageup",
		"command": "-editor.action.pageUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "shift+alt+f2",
		"command": "-editor.action.accessibleView"
	},
	{
		"key": "ctrl+k ctrl+f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
	},
	{
		"key": "escape",
		"command": "-notebook.cell.chat.acceptChanges",
		"when": "inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused"
	},
	{
		"key": "ctrl+enter",
		"command": "-notebook.cell.chat.acceptChanges",
		"when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
	},
	{
		"key": "ctrl+enter",
		"command": "-notebook.cell.chat.acceptChanges",
		"when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'"
	},
	{
		"key": "shift+alt+d",
		"command": "-notebook.cell.detectLanguage",
		"when": "notebookCellEditable && notebookEditable"
	},
	{
		"key": "pagedown",
		"command": "-notebook.cell.cursorPageDown",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "shift+pagedown",
		"command": "-notebook.cell.cursorPageDownSelect",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
	},
	{
		"key": "pageup",
		"command": "-notebook.cell.cursorPageUp",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "shift+pageup",
		"command": "-notebook.cell.cursorPageUpSelect",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
	},
	{
		"key": "ctrl+l",
		"command": "-notebook.centerActiveCell",
		"when": "notebookEditorFocused"
	},
	{
		"key": "y",
		"command": "-notebook.cell.changeToCode",
		"when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
	},
	{
		"key": "m",
		"command": "-notebook.cell.changeToMarkdown",
		"when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
	},
	{
		"key": "alt+delete",
		"command": "-notebook.cell.clearOutputs",
		"when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.collapseCellInput",
		"when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.collapseCellOutput",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
	},
	{
		"key": "shift+alt+down",
		"command": "-notebook.cell.copyDown",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "-notebook.cell.copyUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.chat.arrowOutDown",
		"when": "inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
	},
	{
		"key": "ctrl+up",
		"command": "-notebook.cell.chat.arrowOutUp",
		"when": "inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
	},
	{
		"key": "delete",
		"command": "-notebook.cell.delete",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "escape",
		"command": "-notebook.cell.chat.discard",
		"when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit"
	},
	{
		"key": "enter",
		"command": "-notebook.cell.edit",
		"when": "notebookCellListFocused && notebookEditable && !editorHoverFocused && !inputFocus"
	},
	{
		"key": "meta+enter",
		"command": "-notebook.cell.execute",
		"when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelCount > 0 || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelSourceCount > 0 || inlineChatFocused && notebookCellChatFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code'"
	},
	{
		"key": "alt+enter",
		"command": "-notebook.cell.executeAndInsertBelow",
		"when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "shift+enter",
		"command": "-notebook.cell.executeAndSelectBelow",
		"when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.expandCellInput",
		"when": "notebookCellInputIsCollapsed && notebookCellListFocused"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.expandCellOutput",
		"when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.chat.focus",
		"when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above'"
	},
	{
		"key": "ctrl+up",
		"command": "-notebook.cell.chat.focus",
		"when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below'"
	},
	{
		"key": "ctrl+up",
		"command": "-notebook.cell.focusChatWidget",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "ctrl+home",
		"command": "-notebook.focusTop",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.focusInOutput",
		"when": "notebookCellHasOutputs && notebookEditorFocused"
	},
	{
		"key": "ctrl+end",
		"command": "-notebook.focusBottom",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.chat.focusNextCell",
		"when": "inlineChatFocused && notebookCellChatFocused"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.focusNextChatWidget",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "down",
		"command": "-notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "down",
		"command": "-notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.focusNextEditor",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-notebook.focusNextEditor",
		"when": "notebookEditorFocused"
	},
	{
		"key": "j",
		"command": "-notebook.focusNextEditor",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "ctrl+up",
		"command": "-notebook.cell.focusOutOutput",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+up",
		"command": "-notebook.cell.chat.focusPreviousCell",
		"when": "inlineChatFocused && notebookCellChatFocused"
	},
	{
		"key": "up",
		"command": "-notebook.focusPreviousEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "up",
		"command": "-notebook.focusPreviousEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-notebook.focusPreviousEditor",
		"when": "notebookEditorFocused"
	},
	{
		"key": "k",
		"command": "-notebook.focusPreviousEditor",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "left",
		"command": "-notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-notebook.format",
		"when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-notebook.cell.insertCodeCellAbove",
		"when": "notebookCellListFocused && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-notebook.cell.insertCodeCellBelow",
		"when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
	},
	{
		"key": "alt+meta+j",
		"command": "-notebook.cell.joinBelow",
		"when": "notebookEditorFocused"
	},
	{
		"key": "shift+alt+meta+j",
		"command": "-notebook.cell.joinAbove",
		"when": "notebookEditorFocused"
	},
	{
		"key": "enter",
		"command": "-notebook.cell.chat.accept",
		"when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
	},
	{
		"key": "alt+down",
		"command": "-notebook.cell.moveDown",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+up",
		"command": "-notebook.cell.moveUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "down",
		"command": "-notebook.cell.chat.nextFromHistory",
		"when": "inlineChatFocused && notebookCellChatFocused"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-notebook.cell.pasteAbove",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "up",
		"command": "-notebook.cell.chat.previousFromHistory",
		"when": "inlineChatFocused && notebookCellChatFocused"
	},
	{
		"key": "ctrl+a",
		"command": "-notebook.cell.output.selectAll",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+.",
		"command": "-notebook.cell.openFailureActions",
		"when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-notebook.cell.split",
		"when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
	},
	{
		"key": "escape",
		"command": "-notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
	},
	{
		"key": "meta+enter",
		"command": "-notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'"
	},
	{
		"key": "escape",
		"command": "-notebook.cell.quitEdit",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "escape",
		"command": "-notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
	},
	{
		"key": "ctrl+k y",
		"command": "-notebook.cell.toggleOutputScrolling",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
	},
	{
		"key": "right",
		"command": "-notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-editor.action.insertLineBefore",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+enter",
		"command": "-editor.action.insertLineAfter",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+up",
		"command": "-editor.action.goToTopHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "f8",
		"command": "-editor.action.marker.nextInFiles",
		"when": "editorFocus"
	},
	{
		"key": "shift+f8",
		"command": "-editor.action.marker.prevInFiles",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-editor.action.goToBottomHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "control+n",
		"command": "-github.copilot.nextPanelSolution",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "alt+]",
		"command": "-github.copilot.nextPanelSolution",
		"when": "github.copilot.activated && github.copilot.panelVisible"
	},
	{
		"key": "ctrl+o",
		"command": "-extension.vim_ctrl+o",
		"when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
	},
	{
		"key": "ctrl+enter",
		"command": "-github.copilot.generate",
		"when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
	},
	{
		"key": "alt+[",
		"command": "-github.copilot.previousPanelSolution",
		"when": "github.copilot.activated && github.copilot.panelVisible"
	},
	{
		"key": "ctrl+/",
		"command": "-github.copilot.acceptCursorPanelSolution",
		"when": "github.copilot.activated && github.copilot.panelVisible"
	},
	{
		"key": "alt+\\",
		"command": "-editor.action.inlineSuggest.trigger",
		"when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
	},
	{
		"key": "ctrl+space",
		"command": "-focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+space",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+space",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "ctrl+space",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "ctrl+space",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "n",
		"command": "list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "e",
		"command": "list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "i",
		"command": "list.expand",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "f",
		"command": "list.find",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "/",
		"command": "list.find",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "shift+m",
		"command": "list.focusPageUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "m",
		"command": "list.focusPageDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "tab",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.focusSideBar",
				"list.focusDown"
			]
		},
		"when": "textCompareEditorVisible && neovim.mode == normal && editorFocus"
	},
	{
		"key": "tab",
		"command": "selectNextSuggestion",
		"when": "editorTextFocus && !editorReadonly && suggestWidgetVisible"
	},
	{
		"key": "tab",
		"command": "widgetNavigation.focusNext",
		"when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
	},
	{
		"key": "shift+tab",
		"command": "widgetNavigation.focusPrev",
		"when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
	},
	{
		"key": "shift+tab",
		"command": "selectPrevSuggestion",
		"when": "editorTextFocus && !editorReadonly && suggestWidgetVisible"
	},
	{
		"key": "enter",
		"command": "acceptSelectedSuggestion",
		"when": "editorTextFocus && !editorReadonly && suggestWidgetVisible"
	},
	{
		"key": "tab",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "shift+tab",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+q",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible && editorTextFocus && neovim.mode == insert"
	},
	{
		"key": "ctrl+a",
		"command": "notifications.clearAll",
		"when": "editorTextFocus && neovim.mode != insert"
	},
	{
		"key": "ctrl+h",
		"command": "rest-client.request",
		"when": "editorLangId == http && editorTextFocus && neovim.mode == normal"
	},
	{
		"key": "ctrl+h",
		"command": "mysql.runSQL",
		"when": "editorLangId == sql && editorTextFocus && neovim.mode == normal"
	},
	{
		"key": "tab",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "shift+tab",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "escape",
		"command": "workbench.action.closeSidebar",
		"when": "sideBarFocus"
	},
	{
		"key": "escape",
		"command": "workbench.action.closePanel",
		"when": "panelFocus"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorVisible && neovim.mode == normal && editorFocus"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.focusAuxiliaryBar",
		"when": "!auxiliaryBarVisible && neovim.mode != insert && !inQuickOpen"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.closeAuxiliaryBar",
		"when": "auxiliaryBarVisible && neovim.mode != insert"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.focusSideBar",
		"when": "!sideBarVisible && neovim.mode != insert && !inQuickOpen"
	},
	{
		"key": "ctrl+o",
		"command": "workbench.extensions.action.installExtensions",
		"when": "!sideBarVisible && neovim.mode != insert"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.closeSidebar",
		"when": "sideBarVisible"
	},
	{
		"key": "ctrl+o",
		"command": "workbench.action.closeSidebar",
		"when": "sideBarVisible"
	},
	{
		"key": "ctrl+shift+i",
		"command": "workbench.action.focusStatusBar",
		"when": "!statusbarFocus"
	},
	{
		"key": "ctrl+i",
		"command": "workbench.action.toggleStatusbarVisibility",
		"when": "!statusbarFocus && neovim.mode != insert"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorVisible && neovim.mode != insert && editorFocus"
	},
	{
		"key": "ctrl+t",
		"command": "workbench.view.explorer",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "workbench.action.focusFirstEditorGroup",
		"when": "!editorFocus"
	},
	{
		"key": "escape",
		"command": "workbench.action.closeAuxiliaryBar",
		"when": "auxiliaryBarFocus"
	},
	{
		"key": "ctrl+space",
		"command": "workbench.action.toggleMaximizeEditorGroup",
		"when": "!panelFocus"
	},
	{
		"key": "ctrl+space",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "panelFocus"
	},
	{
		"key": "Escape",
		"command": "workbench.action.closeQuickOpen",
		"when": "inputFocus && quickOpenVisible"
	},
	{
		"key": "escape",
		"command": "workbench.action.closePanel",
		"when": "panelFocus && !textInputFocus"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.closeActiveEditor",
		"when": "!terminalFocus && !editorTextFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "workbench.action.togglePanel",
		"when": "terminalFocus"
	},
	{
		"key": "shift+r",
		"command": "workbench.action.terminal.rename",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "workbench.action.terminal.focus",
		"when": "editorTextFocus && neovim.mode == normal"
	}
]